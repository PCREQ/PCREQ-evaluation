
                        **Debug Mission** 
                        Resolve runtime crash caused by code-level incompatibilities in dependency chain.

                        **Input Context**
                        - Current environment: boto3==1.26.131
botocore==1.29.131
charset-normalizer==3.1.0
click==7.1.2
Flask==1.1.4
Flask-Cors==3.0.8
idna==3.9
importlib-metadata==4.13.0
itsdangerous==1.1.0
Jinja2==2.11.3
jmespath==1.0.1
joblib==1.3.2
MarkupSafe==1.1.1
nltk==3.6.7
numpy==1.21.5
python-dateutil==2.8.2
pytorch-transformers==1.2.0
regex==2021.8.3
requests==2.28.2
s3transfer==0.6.0
sacremoses==0.0.53
sentencepiece==0.1.96
seqeval==0.0.5
six==1.16.0
torch==1.13.0
tqdm==4.62.3
typing_extensions==4.1.1
urllib3==1.26.13
Werkzeug==1.0.1
zipp==3.6.0

                        - Python version: 3.7
                        - Crash traceback: Traceback (most recent call last):
  File "run_ner.py", line 594, in <module>
    main()
  File "run_ner.py", line 563, in main
    logits = model(input_ids, segment_ids, input_mask,valid_ids=valid_ids,attention_mask_label=l_mask)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "run_ner.py", line 33, in forward
    sequence_output = self.bert(input_ids, token_type_ids, attention_mask,head_mask=None)[0]
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/pytorch_transformers/modeling_bert.py", line 710, in forward
    head_mask=head_mask)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/pytorch_transformers/modeling_bert.py", line 431, in forward
    layer_outputs = layer_module(hidden_states, attention_mask, head_mask[i])
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/pytorch_transformers/modeling_bert.py", line 409, in forward
    attention_outputs = self.attention(hidden_states, attention_mask, head_mask)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/pytorch_transformers/modeling_bert.py", line 366, in forward
    self_outputs = self.self(input_tensor, attention_mask, head_mask)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lei/anaconda3/envs/py37-4/lib/python3.7/site-packages/pytorch_transformers/modeling_bert.py", line 295, in forward
    attention_scores = torch.matmul(query_layer, key_layer.transpose(-1, -2))
RuntimeError: CUDA error: CUBLAS_STATUS_NOT_SUPPORTED when calling `cublasSgemmStridedBatched( handle, opa, opb, m, n, k, &alpha, a, lda, stridea, b, ldb, strideb, &beta, c, ldc, stridec, num_batches)`


                        **Analysis Protocol**
                        1. Traceback Pattern Matching：
                        a. Identify error type (ImportError/AttributeError/TypeError)
                        b. Map to possible API changes in torch v1.13.0 or its dependencies
                        2. Compatibility Matrix Check：
                        a. Verify library-to-library API compatibility through version ranges
                        b. Confirm project-to-library interface compatibility
                        3. Breakpoint Isolation：
                        b. Determine if conflict originates from：
                            • Direct API changes in torch
                            • Transitive dependency API shifts

                        **Resolution Rules**
                        - PRIMARY CONSTRAINT: Maintain torch==1.13.0
                        - SECONDARY ADJUSTMENTS: 
                        • Modify dependency versions only when API contracts allow
                        • Prefer backward-compatible minor version changes

                        **Output Mandates**
                        STRICT FORMAT:
                        lib1==x.y.z  
                        lib2==a.b.c
                        ...
                        PROHIBITED:
                        • Any non-version text.
                        • Library additions/removals
                        • Version placeholders
                        MANDATORY:
                        • Preserve original library names and count
                        • Pin EXACT versions
                        • Zero explanations/comments
                        