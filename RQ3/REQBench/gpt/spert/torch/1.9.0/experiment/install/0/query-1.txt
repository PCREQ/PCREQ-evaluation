
            **Task**
            Resolve pip install conflict in requirements.txt while preserving library integrity.

            **Input Context**
            - Current requirements.txt: blis==0.7.11
catalogue==2.0.10
charset-normalizer==3.3.2
click==7.1.2
coloredlogs==15.0.1
cymem==2.0.8
filelock==3.12.2
humanfriendly==10.0
idna==3.7
importlib-metadata==6.7.0
Jinja2==2.11.3
joblib==1.3.2
MarkupSafe==2.1.5
mpmath==1.2.1
murmurhash==1.0.10
numpy==1.19.5
packaging==24.0
pathy==0.10.3
preshed==3.0.9
protobuf==3.20.0
pydantic==1.7.4
regex==2024.4.16
requests==2.31.0
sacremoses==0.0.53
scikit-learn==0.24.0
scipy==1.5.4
sentencepiece==0.1.91
six==1.16.0
smart-open==6.4.0
spacy==3.0.1
spacy-legacy==3.0.12
srsly==2.4.8
sympy==1.10.1
tensorboardX==1.6
thinc==8.0.3
threadpoolctl==3.1.0
tokenizers==0.9.4
torch==1.9.0
tqdm==4.55.1
transformers==4.1.1
typer==0.3.2
typing_extensions==4.1.1
urllib3==2.0.7
wasabi==0.10.1
zipp==3.15.0

            - Python version: 3.7
            - Conflict error message: conflicting dependencies.

The conflict is caused by:
    The user requested typing_extensions==4.1.1
    catalogue 2.0.10 depends on typing-extensions>=3.6.4; python_version < "3.8"
    importlib-metadata 6.7.0 depends on typing-extensions>=3.6.4; python_version < "3.8"
    spacy 3.0.1 depends on typing-extensions>=3.7.4; python_version < "3.8"
    thinc 8.0.3 depends on typing-extensions<4.0.0.0 and >=3.7.4.1; python_version < "3.8"

To fix this you could try to:
1. loosen the range of package versions you've specified
2. remove package versions to allow pip attempt to solve the dependency conflict

ERROR: ResolutionImpossible: for help visit https://pip.pypa.io/en/latest/topics/dependency-resolution/#dealing-with-dependency-conflicts


            **Resolution Protocol**
            1. Parse conflict_info to identify:
            a. Direct conflicting packages
            b. Common dependency chains
            c. Python version constraints
            2. Apply minimum version adjustment strategy:
            a. Prioritize keeping torch==1.9.0
            b. Modify other package versions only when necessary
            c. Maintain original library set

            **Hard Constraints**
            - STRICTLY MAINTAIN: 
            • torch==1.9.0
            • Original library count
            - MUST ENSURE: 
            • Complete dependency tree compatibility
            • Python 3.7 support for all packages
            - STRICTLY PROHIBITED:
            • Adding/removing libraries
            • Version speculation without error evidence

            **Output Mandates**
            STRICT FORMAT:
            lib1==x.y.z  
            lib2==a.b.c
            ...
            PROHIBITED:
            • Any non-version text.
            • Library additions/removals
            • Version placeholders
            MANDATORY:
            • Preserve original library names and count
            • Pin EXACT versions
            • Zero explanations/comments
            