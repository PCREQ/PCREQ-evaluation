
                        **Debug Mission** 
                        Resolve runtime crash caused by code-level incompatibilities in dependency chain.

                        **Input Context**
                        - Current environment: certifi==2021.5.30
charset-normalizer==2.0.12
click==8.0.4
dataclasses==0.8
filelock==3.4.1
future==1.0.0
idna==3.7
importlib-metadata==4.8.3
importlib-resources==5.4.0
joblib==1.1.1
keras==2.10.0
numpy==1.19.5
packaging==21.3
pyparsing==3.1.2
pytorch-crf==0.7.2
regex==2023.8.8
requests==2.27.1
sacremoses==0.0.53
sentencepiece==0.2.0
seqeval==0.0.12
six==1.16.0
tokenizers==0.10.3
torch==1.9.0
tqdm==4.64.1
transformers==4.5.1
typing_extensions==4.1.1
urllib3==1.26.19
zipp==3.6.0

                        - Python version: 3.6
                        - Crash traceback: Traceback (most recent call last):
  File "predict.py", line 10, in <module>
    from utils import init_logger, load_tokenizer, get_intent_labels, get_slot_labels, MODEL_CLASSES
  File "/home/lei/compatibility_analysis/pytorch/1.6/JointBERT/utils.py", line 12, in <module>
    from model import JointBERT, JointDistilBERT, JointAlbert
  File "/home/lei/compatibility_analysis/pytorch/1.6/JointBERT/model/__init__.py", line 1, in <module>
    from .modeling_jointbert import JointBERT
  File "/home/lei/compatibility_analysis/pytorch/1.6/JointBERT/model/modeling_jointbert.py", line 3, in <module>
    from transformers.modeling_bert import BertPreTrainedModel, BertModel, BertConfig
ModuleNotFoundError: No module named 'transformers.modeling_bert'


                        **Analysis Protocol**
                        1. Traceback Pattern Matching：
                        a. Identify error type (ImportError/AttributeError/TypeError)
                        b. Map to possible API changes in torch v1.9.0 or its dependencies
                        2. Compatibility Matrix Check：
                        a. Verify library-to-library API compatibility through version ranges
                        b. Confirm project-to-library interface compatibility
                        3. Breakpoint Isolation：
                        b. Determine if conflict originates from：
                            • Direct API changes in torch
                            • Transitive dependency API shifts

                        **Resolution Rules**
                        - PRIMARY CONSTRAINT: Maintain torch==1.9.0
                        - SECONDARY ADJUSTMENTS: 
                        • Modify dependency versions only when API contracts allow
                        • Prefer backward-compatible minor version changes

                        **Output Mandates**
                        STRICT FORMAT:
                        lib1==x.y.z  
                        lib2==a.b.c
                        ...
                        PROHIBITED:
                        • Any non-version text.
                        • Library additions/removals
                        • Version placeholders
                        MANDATORY:
                        • Preserve original library names and count
                        • Pin EXACT versions
                        • Zero explanations/comments
                        